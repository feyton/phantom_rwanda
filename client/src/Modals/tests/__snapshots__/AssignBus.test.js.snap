// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Change Roles Renders the modal and submit form 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="font-raleway py-2 px-4"
      >
        <h1
          class="font-bold font-raleway text-center text-2xl mb-2"
        >
          Change user's role
        </h1>
        <hr />
        <div
          class="mt-2"
        >
          <ul>
            <li>
              <b>
                Name
              </b>
              : 
              Fabrice
            </li>
            <li>
              <b>
                Email
              </b>
              : 
              emanuel@me.com
            </li>
            <li>
              <b>
                Role
              </b>
              : 
              Driver
            </li>
            <li />
          </ul>
        </div>
        <form
          action="#none"
          class="block"
          id="role-form"
        >
          <label
            class="required block my-3"
            for="permissions"
          >
            Change role:
          </label>
          <select
            aria-required="true"
            class="bg-gray-300 block my-2 border px-2 py-1 rounded-sm placeholder:font-raleway uppercase"
            id="permissions"
            name="permission"
            required=""
          >
            <option
              hidden=""
              value=""
            >
              Choose new role
            </option>
            <option
              value="1"
            >
              Admin
            </option>
            <option
              value="2"
            >
              Operator
            </option>
            <option
              value="3"
            >
              Driver
            </option>
          </select>
          <button
            class="bg-primary rounded-md text-white font-bold font-raleway py-2 px-3 hover:bg-hover transition-all block hover:transition-all"
            type="submit"
          >
            Continue
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="font-raleway py-2 px-4"
    >
      <h1
        class="font-bold font-raleway text-center text-2xl mb-2"
      >
        Change user's role
      </h1>
      <hr />
      <div
        class="mt-2"
      >
        <ul>
          <li>
            <b>
              Name
            </b>
            : 
            Fabrice
          </li>
          <li>
            <b>
              Email
            </b>
            : 
            emanuel@me.com
          </li>
          <li>
            <b>
              Role
            </b>
            : 
            Driver
          </li>
          <li />
        </ul>
      </div>
      <form
        action="#none"
        class="block"
        id="role-form"
      >
        <label
          class="required block my-3"
          for="permissions"
        >
          Change role:
        </label>
        <select
          aria-required="true"
          class="bg-gray-300 block my-2 border px-2 py-1 rounded-sm placeholder:font-raleway uppercase"
          id="permissions"
          name="permission"
          required=""
        >
          <option
            hidden=""
            value=""
          >
            Choose new role
          </option>
          <option
            value="1"
          >
            Admin
          </option>
          <option
            value="2"
          >
            Operator
          </option>
          <option
            value="3"
          >
            Driver
          </option>
        </select>
        <button
          class="bg-primary rounded-md text-white font-bold font-raleway py-2 px-3 hover:bg-hover transition-all block hover:transition-all"
          type="submit"
        >
          Continue
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Modal tests Should render the assign modal 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="font-raleway w-fit px-8 py-2"
      >
        <h1
          class="font-bold"
        >
          Driver Info
        </h1>
        <hr />
        <ul>
          <li>
            <span>
              Name: 
            </span>
            <b>
              Fabrice
            </b>
          </li>
          <li>
            <span>
              Email: 
            </span>
            <b>
              emanuel@me.com
            </b>
          </li>
          <li>
            <span>
              License: 
            </span>
            <b>
              199787200045637884773
            </b>
          </li>
          <li>
            <span>
              Assigned bus: 
            </span>
            <b>
              none
            </b>
          </li>
        </ul>
        <hr />
        <div>
          <form
            action="#23"
            class="py-2"
            id="assign-form"
          >
            <label
              class="block font-raleway"
              for="plate"
            >
              Bus plate number
            </label>
            <input
              class="bg-gray-300 my-2 border px-2 py-1 rounded-sm placeholder:font-raleway uppercase"
              id="bus-plate"
              name="plate"
              placeholder="RAB1000"
              required=""
              type="text"
            />
            <p
              class="text-rose-500 mb-2"
            >
              Invalid plate number
            </p>
            <button
              class="bg-primary rounded-md text-white font-bold font-raleway py-2 px-3 hover:bg-hover transition-all block hover:transition-all"
              type="submit"
            >
              Assign
            </button>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="font-raleway w-fit px-8 py-2"
    >
      <h1
        class="font-bold"
      >
        Driver Info
      </h1>
      <hr />
      <ul>
        <li>
          <span>
            Name: 
          </span>
          <b>
            Fabrice
          </b>
        </li>
        <li>
          <span>
            Email: 
          </span>
          <b>
            emanuel@me.com
          </b>
        </li>
        <li>
          <span>
            License: 
          </span>
          <b>
            199787200045637884773
          </b>
        </li>
        <li>
          <span>
            Assigned bus: 
          </span>
          <b>
            none
          </b>
        </li>
      </ul>
      <hr />
      <div>
        <form
          action="#23"
          class="py-2"
          id="assign-form"
        >
          <label
            class="block font-raleway"
            for="plate"
          >
            Bus plate number
          </label>
          <input
            class="bg-gray-300 my-2 border px-2 py-1 rounded-sm placeholder:font-raleway uppercase"
            id="bus-plate"
            name="plate"
            placeholder="RAB1000"
            required=""
            type="text"
          />
          <p
            class="text-rose-500 mb-2"
          >
            Invalid plate number
          </p>
          <button
            class="bg-primary rounded-md text-white font-bold font-raleway py-2 px-3 hover:bg-hover transition-all block hover:transition-all"
            type="submit"
          >
            Assign
          </button>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
